on:
  push:
    branches:
      - 'main'
env:
  REGISTRY_NAME: gkApps
  CLUSTER_NAME: todoapp
  CLUSTER_RESOURCE_GROUP: Todo-App
  APP_NAME: todo-react
  SERVICE_NAME: todo-service  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main

      # Connect to Azure Container Registry (ACR)
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build ./app/. -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.APP_NAME }}:latest
          docker build ./server/. -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.SERVICE_NAME }}:latest
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.SERVICE_NAME }}:latest

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: '${{ env.CLUSTER_NAME }}'
          resource-group: '${{ env.CLUSTER_RESOURCE_GROUP }}'

      - uses: swdotcom/update-and-apply-kubernetes-configs@v1
        with:
          k8-config-file-paths: manifests/deployment.yml  manifests/service.yml
          replacement-method: defined
        env:
          MONGO_CONNECTION_STRING: ${{ secrets.MONGO_CONNECTION_STRING }}
